% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/writeRasterB.R
\name{writeRasterB}
\alias{writeRasterB}
\title{Write raster data to a file in blocks}
\usage{
writeRasterB(x, filename, ...)
}
\arguments{
\item{x}{Raster* object}

\item{filename}{Output filename}

\item{...}{Additional arguments: 
  		
\code{datatype}{Character. Output data type (e.g. 'INT2S' or 'FLT4S'). 
See \code{\link{dataType}}. If no datatype is specified, 'FLT4S' is used,
unless this default value was changed with \code{\link{rasterOptions}}}
	
\code{overwrite}: Logical. If TRUE, "filename" will be overwritten if it exists
	
\code{progress}: Character. Set a value to show a progress bar. Valid values are "text" and "window".

\code{NAflag}: Numeric. To overwrite the default value used to represent \code{NA} in a file 
	
\code{bandorder}: Character. 'BIL', 'BIP', or 'BSQ'. For 'native' file formats only.
For some other formats you can use the 'options' argument (see below)
	
\code{options}: Character. File format specific GDAL options. E.g., when
writing a geotiff file you can use: \code{options=c("COMPRESS=NONE", "TFW=YES")}

You can use options=c("PROFILE=BASELINE") to create a plain  tif with no GeoTIFF tags. 
This can be useful when writing files to be read by applications intolerant of unrecognised tags. 
(see \url{http://www.gdal.org/frmt_gtiff.html})

NetCDF files have the following additional, optional, arguments: \code{varname}, \code{varunit}, \code{longname}, \code{xname}, \code{yname}, \code{zname}, \code{zunit}

\code{prj}: Logical. If \code{TRUE}, the crs is written to a .prj file. This can be useful 
when writing to an ascii file or another file type that does not store the crs
}
}
\value{
This function is used for the side-effect of writing values to a file.
}
\description{
Write an entire Raster* object to a file in blocks by using \code{\link[raster]{writeRaster}},
\code{\link[raster]{blockSize}}, \code{\link[raster]{writeStart}}, and
\code{\link[raster]{writeStop}}. Alternative to \code{\link[raster]{writeRaster}} when
RAM memory is low.
}
\details{
See \code{\link[raster]{writeRaster}}
}
\examples{
# Using the examples of raster::writeRaster
r <- raster(system.file("external/test.grd", package="raster"))

# take a small part
r <- crop(r, extent(179880, 180800, 329880, 330840) )

# write to an integer binary file
rf <- writeRaster(r, filename="allint.grd", datatype='INT4S', overwrite=TRUE)
rfB <- writeRasterB(r, filename="allint.grd", datatype='INT4S', overwrite=TRUE)
compareRaster(rf, rfB, values=TRUE)

# make a brick and save multi-layer file
b <- brick(r, sqrt(r))
bf <- writeRaster(b, filename="multi.grd", bandorder='BIL', overwrite=TRUE)
bfB <- writeRasterB(b, filename="multi.grd", bandorder='BIL', overwrite=TRUE)
compareRaster(bf[[1]], bfB[[1]], values=TRUE)
compareRaster(bf[[2]], bfB[[2]], values=TRUE)

# write to a new geotiff file (depends on rgdal)
if (require(rgdal)) {
  rf <- writeRaster(r, filename="test.tif", format="GTiff", overwrite=TRUE)
  bf <- writeRaster(b, filename="multi.tif", options="INTERLEAVE=BAND", overwrite=TRUE)
  rfB <- writeRasterB(r, filename="test.tif", format="GTiff", overwrite=TRUE)
  bfB <- writeRasterB(b, filename="multi.tif", options="INTERLEAVE=BAND", overwrite=TRUE)
}
compareRaster(rf, rfB, values=TRUE)
compareRaster(bf[[1]], bfB[[1]], values=TRUE)
compareRaster(bf[[2]], bfB[[2]], values=TRUE)

# write to netcdf
if (require(ncdf4)) {
  rnc <- writeRaster(r, filename='netCDF.nc', format="CDF", overwrite=TRUE)
  rncB <- writeRasterB(r, filename='netCDF.nc', format="CDF", overwrite=TRUE)
}
rnc
rncB
}

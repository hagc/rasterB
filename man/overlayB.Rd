% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/overlayB.R
\name{overlayB}
\alias{overlayB}
\title{Overlay Raster objects in blocks}
\usage{
overlayB(x, ..., fun, cores, filename = "", verbose = TRUE)
}
\arguments{
\item{x}{Raster* object}

\item{...}{Additional arguments for writing files as in \code{\link{writeRasterB}}}

\item{fun}{Function to be applied. The function should match the number of layers of the RasterStack/Brick object.}

\item{cores}{Integer. Number of cores to process blocks in parallel}

\item{filename}{Character. Output filename (optional) }

\item{verbose}{logical. Enable verbose execution?}
}
\value{
RasterLayer object
}
\description{
Create a new RasterLayer object, based on one multi-layer Raster* object.
Similar to \code{\link[raster]{overlay}}, but processing in blocks
with \code{\link[raster]{blockSize}}, \code{\link[raster]{writeStart}}, and
\code{\link[raster]{writeStop}}. Alternative to \code{\link[raster]{overlay}} when
RAM memory is low.
}
\details{
\code{overlayB} is limited comparing to \code{\link[raster]{overlay}} as
the former only accepts one multi-layer Raster* object and outputs
a RasterLayer.
}
\examples{
r <- raster(ncol=10, nrow=10)
r1 <- init(r, fun=runif)
r2 <- init(r, fun=runif)
r3 <- overlay(r1, r2, fun=function(x,y){return(x+y)})
r3B <- overlayB(stack(r1, r2), fun=function(x,y){return(x+y)}, verbose=FALSE)
compareRaster(r3,r3B,values=TRUE, stopiffalse=FALSE)
cellStats(abs(r3-r3B),max) # minor difference

# long version for multiplication
r4 <- overlay(r1, r2, fun=function(x,y){(x*y)} )
r4B <- overlayB(stack(r1, r2), fun=function(x,y){(x*y)}, verbose=FALSE)
compareRaster(r4,r4B,values=TRUE, stopiffalse=FALSE)
cellStats(abs(r4-r4B),max) # minor difference

# use the individual layers of a RasterStack to get a RasterLayer
s <- stack(r1, r2)
r5 <- overlay(s, fun=function(x,y) x*y)
r5B <- overlayB(s, fun=function(x,y) x*y, verbose=FALSE)
compareRaster(r5,r5B,values=TRUE, stopiffalse=FALSE)
cellStats(r5-r5B,max) # minor difference

overlayB(s, fun=function(x,y) x*y)
overlayB(s, fun=function(x,y) x*y, cores=2)
}

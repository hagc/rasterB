% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aggregateB.R
\name{aggregateB}
\alias{aggregateB}
\title{Aggregate raster cells in blocks}
\usage{
aggregateB(x, fact = 2, fun = mean, filename = "", ...)
}
\arguments{
\item{x}{Raster* object or SpatialPolygons* object}

\item{fact}{integer. Aggregation factor expressed as number of cells in each direction (horizontally and vertically). Or two integers (horizontal and vertical aggregation factor) or three integers (when also aggregating over layers). See Details}

\item{fun}{function used to aggregate values }

\item{filename}{character. Output filename (optional)}

\item{...}{if \code{x} is a Raster* object, additional arguments as for \code{\link{writeRaster}}}
}
\value{
RasterLayer or RasterBrick
}
\description{
Aggregate a Raster* object to create a new RasterLayer or RasterBrick with a lower resolution
(larger cells). Similar to \code{\link[raster]{aggregate}}, but processing in blocks
with \code{\link[raster]{blockSize}}, \code{\link[raster]{writeStart}}, and
\code{\link[raster]{writeStop}}. Alternative to \code{\link[raster]{aggregate}} when
RAM memory is low.
}
\details{
\code{aggregateB} runs function \code{\link[raster]{aggregate}} of raster package but in
blocks. This is alternative to original \code{\link[raster]{aggregate}}, which was
returning and error while aggregating rasters from 20 m to 100 m.
The error was:

Error in setValues(out, .Call("_raster_aggregate_fun", x, dims, as.integer(na.rm),  :
  std::bad_alloc
}
\examples{
# same examples as in raster::aggregate
r <- raster()
r <- setValues(r, runif(ncell(r)))

# a new aggregated raster, max of the values
ra <- aggregate(r, fact=10, fun=max)
ra2<- aggregateB(r, fact=10, fun=max)
cellStats(ra-ra2, function(x,...){max(abs(x))}) # maximum difference between the rasters

}
